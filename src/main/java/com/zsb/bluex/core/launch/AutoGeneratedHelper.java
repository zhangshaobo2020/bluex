package com.zsb.bluex.core.launch;

import com.zsb.bluex.core.def.FunctionDef;
import com.zsb.bluex.core.def.ParamDef;
import com.zsb.bluex.core.def.TypeDef;

public class AutoGeneratedHelper {

    public static FunctionDef getter(Class<?> clazz) {
        FunctionDef def = new FunctionDef();
        def.setName("Get" + " " + clazz.getSimpleName());
        def.setQualifiedName("GENERATED:" + clazz.getName() + ":GETTER");
        def.getInputParamDefs().add(
                new ParamDef(
                        "Name",
                        MetaHolder.PRIMITIVE_DEFINITION.get("java.lang.String")
                )
        );
        def.getOutputParamDefs().add(
                new ParamDef(
                        "Var",
                        MetaHolder.CLASS_DEFINITION.get(clazz.getName())
                )
        );
        def.setCategory("用户自定义类型|" + clazz.getSimpleName() + "|GETTER");
        def.setDescription("从上下文环境中根据Name获取变量");
        def.setDisplayName("Get " + clazz.getSimpleName());
        def.setExecutable(false);
        def.setSignature(clazz.getName() + ":GETTER()");
        return def;
    }

    public static FunctionDef setter(Class<?> clazz) {
        FunctionDef def = new FunctionDef();
        def.setName("Set" + " " + clazz.getSimpleName());
        def.setQualifiedName("GENERATED:" + clazz.getName() + ":SETTER");
        def.getInputParamDefs().add(
                new ParamDef(
                        "Name",
                        MetaHolder.PRIMITIVE_DEFINITION.get("java.lang.String")
                )
        );
        def.getInputParamDefs().add(
                new ParamDef(
                        "Var",
                        MetaHolder.CLASS_DEFINITION.get(clazz.getName())
                )
        );
        def.setCategory("用户自定义类型|" + clazz.getSimpleName() + "|SETTER");
        def.setDescription("从上下文环境中根据Name设置变量");
        def.setDisplayName("Set " + clazz.getSimpleName());
        def.setExecutable(true);
        def.setSignature(clazz.getName() + ":SETTER(INPUT<String>Name,INPUT<" + clazz.getSimpleName() + ">Var)");
        return def;
    }

    public static FunctionDef constructor(Class<?> clazz) {
        FunctionDef def = new FunctionDef();
        def.setName("Construct" + " " + clazz.getSimpleName());
        def.setQualifiedName("GENERATED:" + clazz.getName() + ":CONSTRUCTOR");
        // 遍历所有字段
        TypeDef typeDef = MetaHolder.CLASS_DEFINITION.get(clazz.getName());
        typeDef.getFields().forEach((fieldName, fieldTypeDef) -> def.getInputParamDefs().add(
                new ParamDef(
                        fieldName,
                        fieldTypeDef
                )
        ));
        def.getOutputParamDefs().add(
                new ParamDef(
                        "Var",
                        MetaHolder.CLASS_DEFINITION.get(clazz.getName())
                )
        );
        def.setCategory("用户自定义类型|" + clazz.getSimpleName() + "|CONSTRUCTOR");
        def.setDescription("构造函数");
        def.setDisplayName("Constructor " + clazz.getSimpleName());
        def.setExecutable(false);
        def.setSignature(clazz.getName() + ":CONSTRUCTOR()");
        return def;
    }
}
