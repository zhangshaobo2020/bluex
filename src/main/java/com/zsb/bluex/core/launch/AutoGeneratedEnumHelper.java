package com.zsb.bluex.core.launch;

import com.zsb.bluex.core.def.ControlDef;
import com.zsb.bluex.core.def.FunctionDef;
import com.zsb.bluex.core.def.ParamDef;

public class AutoGeneratedEnumHelper {

    public static FunctionDef fromEnum(Class<?> clazz) {
        FunctionDef def = new FunctionDef();
        def.setName("FromEnum" + " " + clazz.getSimpleName());
        def.setQualifiedName("GENERATED:FROMENUM:" + clazz.getName());
        def.getInputParamDefs().add(
                new ParamDef(
                        "Enum",
                        MetaHolder.ENUM_DEFINITION.get(clazz.getName())
                )
        );
        def.getOutputParamDefs().add(
                new ParamDef(
                        "Str",
                        MetaHolder.PRIMITIVE_DEFINITION.get("java.lang.String")
                )
        );
        def.setCategory("用户自定义Enum|" + clazz.getSimpleName() + "|FromEnum函数");
        def.setDescription("将Enum转为字符串");
        def.setDisplayName("FromEnum " + clazz.getSimpleName());
        def.setExecutable(false);
        def.setSignature(clazz.getName() + ":FROMENUM()");
        return def;
    }

    public static FunctionDef toEnum(Class<?> clazz) {
        FunctionDef def = new FunctionDef();
        def.setName("ToEnum" + " " + clazz.getSimpleName());
        def.setQualifiedName("GENERATED:TOENUM:" + clazz.getName());
        def.getInputParamDefs().add(
                new ParamDef(
                        "Str",
                        MetaHolder.PRIMITIVE_DEFINITION.get("java.lang.String")
                )
        );
        def.getOutputParamDefs().add(
                new ParamDef(
                        "Enum",
                        MetaHolder.ENUM_DEFINITION.get(clazz.getName())
                )
        );
        def.setCategory("用户自定义Enum|" + clazz.getSimpleName() + "|ToEnum函数");
        def.setDescription("将字符串转为Enum");
        def.setDisplayName("ToEnum " + clazz.getSimpleName());
        def.setExecutable(false);
        def.setSignature(clazz.getName() + ":TOENUM()");
        return def;
    }

    public static ControlDef enumSwitch(Class<?> clazz) {
        ControlDef def = new ControlDef();
        def.setName("EnumSwitch" + " " + clazz.getSimpleName());
        def.setQualifiedName("CONTROL:ENUMSWITCH:" + clazz.getName());

        def.getInputExecDefs().add(new ParamDef("Exec"));
        def.getInputParamDefs().add(
                new ParamDef(
                        "Enum",
                        MetaHolder.ENUM_DEFINITION.get(clazz.getName())
                )
        );
        // 取枚举常量名
        Object[] enumConstants = clazz.getEnumConstants();
        if (enumConstants != null) {
            for (Object enumConst : enumConstants) {
                def.getOutputExecDefs().add(new ParamDef(enumConst.toString()));
            }
        }
        def.getOutputExecDefs().add(new ParamDef("Default"));
        def.setCategory("控制节点|Switch|" + clazz.getSimpleName());
        def.setDescription("通过Enum进行Switch控制");
        def.setDisplayName("Switch " + clazz.getSimpleName());
        def.setExecutable(true);
        def.setSignature(clazz.getName() + ":ENUMSWITCH()");
        return def;
    }
}
